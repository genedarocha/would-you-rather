{"ast":null,"code":"var _jsxFileName = \"/Users/genedarocha/Documents/dev-create-software/udacity-react-programming-course/Would-You-Rather-Project2/src/components/Dashboard.js\";\n\n/*     File Name   : dashboard.js\n       Date        : 31st May 2020\n       Description : This is the Dashboard.js file which is a component file for the main screen\n*/\nimport React, { PureComponent } from 'react';\nimport Question from './Question';\nimport { TabContent, TabPane, Nav, NavItem, NavLink, Row, Col } from 'reactstrap';\nimport classnames from 'classnames';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nclass DashBoard extends PureComponent {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      activeTab: '1'\n    };\n  }\n\n  toggle(tab) {\n    if (this.state.activeTab !== tab) {\n      this.setState({\n        activeTab: tab\n      });\n    }\n  }\n\n  render() {\n    const _this$props = this.props,\n          unansweredQuestions = _this$props.unansweredQuestions,\n          answeredQuestions = _this$props.answeredQuestions;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Nav, {\n      tabs: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(NavItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(NavLink, {\n      className: classnames({\n        active: this.state.activeTab === '1'\n      }),\n      onClick: () => {\n        this.toggle('1');\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }\n    }, \"Unanswered\")), /*#__PURE__*/React.createElement(NavItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(NavLink, {\n      className: classnames({\n        active: this.state.activeTab === '2'\n      }),\n      onClick: () => {\n        this.toggle('2');\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }\n    }, \"Answered\"))), /*#__PURE__*/React.createElement(TabContent, {\n      activeTab: this.state.activeTab,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(TabPane, {\n      tabId: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    }, unansweredQuestions.map(qid => /*#__PURE__*/React.createElement(Col, {\n      key: qid,\n      sm: \"6\",\n      md: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Question, {\n      id: qid,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 19\n      }\n    }))))), /*#__PURE__*/React.createElement(TabPane, {\n      tabId: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    }, answeredQuestions.map(qid => /*#__PURE__*/React.createElement(Col, {\n      key: qid,\n      sm: \"6\",\n      md: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Question, {\n      id: qid,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 19\n      }\n    })))))));\n  }\n\n}\n\nDashBoard.propTypes = {\n  answeredPolls: PropTypes.array,\n  unansweredPolls: PropTypes.array\n};\n\nfunction mapStateToProps({\n  questions,\n  users,\n  authedUser\n}) {\n  const user = users[authedUser];\n  const answeredQuestions = Object.keys(user.answers).sort((a, b) => questions[b].timestamp - questions[a].timestamp);\n  return {\n    unansweredQuestions: Object.keys(questions).filter(qid => !answeredQuestions.includes(qid)).sort((a, b) => questions[b].timestamp - questions[a].timestamp),\n    answeredQuestions\n  };\n}\n\nexport default connect(mapStateToProps)(DashBoard);","map":{"version":3,"sources":["/Users/genedarocha/Documents/dev-create-software/udacity-react-programming-course/Would-You-Rather-Project2/src/components/Dashboard.js"],"names":["React","PureComponent","Question","TabContent","TabPane","Nav","NavItem","NavLink","Row","Col","classnames","connect","PropTypes","DashBoard","state","activeTab","toggle","tab","setState","render","props","unansweredQuestions","answeredQuestions","active","map","qid","propTypes","answeredPolls","array","unansweredPolls","mapStateToProps","questions","users","authedUser","user","Object","keys","answers","sort","a","b","timestamp","filter","includes"],"mappings":"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","sourcesContent":["   /*     File Name   : dashboard.js\n          Date        : 31st May 2020\n          Description : This is the Dashboard.js file which is a component file for the main screen\n  */\nimport React, { PureComponent } from 'react';\nimport Question from './Question';\nimport { TabContent, TabPane, Nav, NavItem, NavLink, Row, Col } from 'reactstrap';\nimport classnames from 'classnames';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nclass DashBoard extends PureComponent {\n  state = {\n    activeTab: '1'\n  };\n\n  toggle(tab) {\n    if (this.state.activeTab !== tab) {\n      this.setState({\n        activeTab: tab\n      });\n    }\n  }\n\n  render() {\n    const { unansweredQuestions, answeredQuestions } = this.props;\n    return (\n      <div>\n        <Nav tabs>\n          <NavItem>\n            <NavLink\n              className={classnames({ active: this.state.activeTab === '1' })}\n              onClick={() => { this.toggle('1'); }}\n            >\n              Unanswered\n            </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink\n              className={classnames({ active: this.state.activeTab === '2' })}\n              onClick={() => { this.toggle('2'); }}\n            >\n              Answered\n            </NavLink>\n          </NavItem>\n        </Nav>\n\n        <TabContent activeTab={this.state.activeTab}>\n          <TabPane tabId=\"1\">\n            <Row>\n              {unansweredQuestions.map(qid =>\n                <Col key={qid} sm=\"6\" md=\"4\">\n                  <Question id={qid}/>\n                </Col>\n              )}\n            </Row>\n          </TabPane>\n          <TabPane tabId=\"2\">\n            <Row>\n              {answeredQuestions.map(qid =>\n                <Col key={qid} sm=\"6\" md=\"4\">\n                  <Question id={qid}/>\n                </Col>\n              )}\n            </Row>\n          </TabPane>\n        </TabContent>\n      </div>\n    );\n  }\n}\n\nDashBoard.propTypes = {\n  answeredPolls : PropTypes.array,\n  unansweredPolls : PropTypes.array\n};\n\nfunction mapStateToProps ({ questions, users, authedUser }) {\n  const user = users[authedUser];\n  const answeredQuestions = Object.keys(user.answers)\n    .sort((a,b) => questions[b].timestamp - questions[a].timestamp);\n  return {\n    unansweredQuestions : Object.keys(questions).filter(qid => !answeredQuestions.includes(qid))\n      .sort((a,b) => questions[b].timestamp - questions[a].timestamp),\n    answeredQuestions\n  }\n}\n\nexport default connect(mapStateToProps)(DashBoard)\n"]},"metadata":{},"sourceType":"module"}