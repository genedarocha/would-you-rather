{"ast":null,"code":"import { getInitialData } from '../utils/api';\nimport { addUserQuestion, saveUserAnswer, receiveUsers } from '../actions/users';\nimport { addQuestion, receiveQuestions, saveQuestionAnswer } from '../actions/questions';\nimport { _saveQuestionAnswer, _saveQuestion } from '../utils/_DATA';\nexport function handletheInitialData() {\n  return function (dispatch) {\n    return getInitialData().then(function (_ref) {\n      var users = _ref.users,\n          questions = _ref.questions;\n      dispatch(receiveUsers(users));\n      dispatch(receiveQuestions(questions));\n    });\n  };\n}\nexport function handleAddQuestion(optionOneText, optionTwoText) {\n  return function (dispatch, getState) {\n    var _getState = getState(),\n        authedUser = _getState.authedUser;\n\n    return _saveQuestion({\n      optionOneText: optionOneText,\n      optionTwoText: optionTwoText,\n      author: authedUser\n    }).then(function (question) {\n      dispatch(addQuestion(question));\n      dispatch(addUserQuestion(authedUser, question.id));\n    });\n  };\n}\nexport function handleAnswer(qid, option) {\n  return function (dispatch, getState) {\n    var _getState2 = getState(),\n        authedUser = _getState2.authedUser;\n\n    var info = {\n      authedUser: authedUser,\n      qid: qid,\n      answer: option\n    };\n\n    _saveQuestionAnswer(info).then(function () {\n      dispatch(saveQuestionAnswer(authedUser, qid, option));\n      dispatch(saveUserAnswer(authedUser, qid, option));\n    });\n  };\n}","map":{"version":3,"sources":["/Users/genedarocha/Documents/dev-create-software/udacity-react-programming-course/Would-You-Rather-Project2/src/actions/shared.js"],"names":["getInitialData","addUserQuestion","saveUserAnswer","receiveUsers","addQuestion","receiveQuestions","saveQuestionAnswer","_saveQuestionAnswer","_saveQuestion","handletheInitialData","dispatch","then","users","questions","handleAddQuestion","optionOneText","optionTwoText","getState","authedUser","author","question","id","handleAnswer","qid","option","info","answer"],"mappings":"AAAA,SAASA,cAAT,QAA+B,cAA/B;AACA,SAASC,eAAT,EAA0BC,cAA1B,EAA0CC,YAA1C,QAA8D,kBAA9D;AACA,SAASC,WAAT,EAAsBC,gBAAtB,EAAwCC,kBAAxC,QAAkE,sBAAlE;AACA,SAASC,mBAAT,EAA8BC,aAA9B,QAAmD,gBAAnD;AAEA,OAAO,SAASC,oBAAT,GAAgC;AACnC,SAAO,UAACC,QAAD,EAAc;AACjB,WAAOV,cAAc,GAChBW,IADE,CACG,gBAAwB;AAAA,UAArBC,KAAqB,QAArBA,KAAqB;AAAA,UAAdC,SAAc,QAAdA,SAAc;AAC1BH,MAAAA,QAAQ,CAACP,YAAY,CAACS,KAAD,CAAb,CAAR;AACAF,MAAAA,QAAQ,CAACL,gBAAgB,CAACQ,SAAD,CAAjB,CAAR;AACP,KAJM,CAAP;AAKH,GAND;AAOH;AAED,OAAO,SAASC,iBAAT,CAA4BC,aAA5B,EAA2CC,aAA3C,EAAyD;AAC5D,SAAO,UAACN,QAAD,EAAWO,QAAX,EAAwB;AAAA,oBACJA,QAAQ,EADJ;AAAA,QACnBC,UADmB,aACnBA,UADmB;;AAE3B,WAAOV,aAAa,CAAC;AACjBO,MAAAA,aAAa,EAAbA,aADiB;AAEjBC,MAAAA,aAAa,EAAbA,aAFiB;AAGjBG,MAAAA,MAAM,EAAED;AAHS,KAAD,CAAb,CAKNP,IALM,CAKD,UAACS,QAAD,EAAc;AAChBV,MAAAA,QAAQ,CAACN,WAAW,CAACgB,QAAD,CAAZ,CAAR;AACAV,MAAAA,QAAQ,CAACT,eAAe,CAACiB,UAAD,EAAaE,QAAQ,CAACC,EAAtB,CAAhB,CAAR;AACH,KARM,CAAP;AAUH,GAZD;AAaH;AAED,OAAO,SAASC,YAAT,CAAuBC,GAAvB,EAA4BC,MAA5B,EAAoC;AACvC,SAAO,UAACd,QAAD,EAAWO,QAAX,EAAwB;AAAA,qBACNA,QAAQ,EADF;AAAA,QACrBC,UADqB,cACrBA,UADqB;;AAE7B,QAAMO,IAAI,GAAG;AACXP,MAAAA,UAAU,EAAEA,UADD;AAEXK,MAAAA,GAAG,EAAHA,GAFW;AAGXG,MAAAA,MAAM,EAAEF;AAHG,KAAb;;AAKAjB,IAAAA,mBAAmB,CAACkB,IAAD,CAAnB,CACKd,IADL,CACU,YAAM;AACRD,MAAAA,QAAQ,CAACJ,kBAAkB,CAACY,UAAD,EAAaK,GAAb,EAAkBC,MAAlB,CAAnB,CAAR;AACAd,MAAAA,QAAQ,CAACR,cAAc,CAACgB,UAAD,EAAaK,GAAb,EAAkBC,MAAlB,CAAf,CAAR;AACH,KAJL;AAKD,GAZD;AAaH","sourcesContent":["import { getInitialData } from '../utils/api'\nimport { addUserQuestion, saveUserAnswer, receiveUsers } from '../actions/users'\nimport { addQuestion, receiveQuestions, saveQuestionAnswer } from '../actions/questions'\nimport { _saveQuestionAnswer, _saveQuestion } from '../utils/_DATA'\n\nexport function handletheInitialData() {\n    return (dispatch) => {\n        return getInitialData()\n            .then(({ users, questions})=> {\n                dispatch(receiveUsers(users));\n                dispatch(receiveQuestions(questions))\n        })\n    }\n}\n\nexport function handleAddQuestion (optionOneText, optionTwoText){\n    return (dispatch, getState) => {\n        const { authedUser } = getState();\n        return _saveQuestion({\n            optionOneText,\n            optionTwoText,\n            author: authedUser\n        })\n        .then((question) => {\n            dispatch(addQuestion(question));\n            dispatch(addUserQuestion(authedUser, question.id))\n        })\n\n    }\n}\n\nexport function handleAnswer (qid, option) {\n    return (dispatch, getState) => {\n      const { authedUser } = getState();\n      const info = {\n        authedUser: authedUser,\n        qid,\n        answer: option\n      };\n      _saveQuestionAnswer(info)\n          .then(() => {\n              dispatch(saveQuestionAnswer(authedUser, qid, option));\n              dispatch(saveUserAnswer(authedUser, qid, option))\n          })\n    }\n}"]},"metadata":{},"sourceType":"module"}