{"ast":null,"code":"import _classCallCheck from \"/Users/genedarocha/Documents/dev-create-software/udacity-react-programming-course/Would-You-Rather-Project2/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/genedarocha/Documents/dev-create-software/udacity-react-programming-course/Would-You-Rather-Project2/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/genedarocha/Documents/dev-create-software/udacity-react-programming-course/Would-You-Rather-Project2/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/genedarocha/Documents/dev-create-software/udacity-react-programming-course/Would-You-Rather-Project2/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/genedarocha/Documents/dev-create-software/udacity-react-programming-course/Would-You-Rather-Project2/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/genedarocha/Documents/dev-create-software/udacity-react-programming-course/Would-You-Rather-Project2/src/components/Dashboard.js\";\nimport React, { PureComponent } from 'react';\nimport Question from './Question';\nimport { TabContent, TabPane, Nav, NavItem, NavLink, Row, Col } from 'reactstrap';\nimport classnames from 'classnames';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nvar DashBoard = /*#__PURE__*/function (_PureComponent) {\n  _inherits(DashBoard, _PureComponent);\n\n  function DashBoard() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, DashBoard);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(DashBoard)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      activeTab: '1'\n    };\n    return _this;\n  }\n\n  _createClass(DashBoard, [{\n    key: \"toggle\",\n    value: function toggle(tab) {\n      if (this.state.activeTab !== tab) {\n        this.setState({\n          activeTab: tab\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          unansweredQuestions = _this$props.unansweredQuestions,\n          answeredQuestions = _this$props.answeredQuestions;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Nav, {\n        tabs: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(NavItem, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(NavLink, {\n        className: classnames({\n          active: this.state.activeTab === '1'\n        }),\n        onClick: function onClick() {\n          _this2.toggle('1');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }\n      }, \"Unanswered\")), /*#__PURE__*/React.createElement(NavItem, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(NavLink, {\n        className: classnames({\n          active: this.state.activeTab === '2'\n        }),\n        onClick: function onClick() {\n          _this2.toggle('2');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }\n      }, \"Answered\"))), /*#__PURE__*/React.createElement(TabContent, {\n        activeTab: this.state.activeTab,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(TabPane, {\n        tabId: \"1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }\n      }, unansweredQuestions.map(function (qid) {\n        return /*#__PURE__*/React.createElement(Col, {\n          key: qid,\n          sm: \"6\",\n          md: \"4\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(Question, {\n          id: qid,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 19\n          }\n        }));\n      }))), /*#__PURE__*/React.createElement(TabPane, {\n        tabId: \"2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }\n      }, answeredQuestions.map(function (qid) {\n        return /*#__PURE__*/React.createElement(Col, {\n          key: qid,\n          sm: \"6\",\n          md: \"4\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(Question, {\n          id: qid,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 19\n          }\n        }));\n      })))));\n    }\n  }]);\n\n  return DashBoard;\n}(PureComponent);\n\nDashBoard.propTypes = {\n  answeredPolls: PropTypes.array,\n  unansweredPolls: PropTypes.array\n};\n\nfunction mapStateToProps(_ref) {\n  var questions = _ref.questions,\n      users = _ref.users,\n      authedUser = _ref.authedUser;\n  var user = users[authedUser];\n  var answeredQuestions = Object.keys(user.answers).sort(function (a, b) {\n    return questions[b].timestamp - questions[a].timestamp;\n  });\n  return {\n    unansweredQuestions: Object.keys(questions).filter(function (qid) {\n      return !answeredQuestions.includes(qid);\n    }).sort(function (a, b) {\n      return questions[b].timestamp - questions[a].timestamp;\n    }),\n    answeredQuestions: answeredQuestions\n  };\n}\n\nexport default connect(mapStateToProps)(DashBoard);","map":{"version":3,"sources":["/Users/genedarocha/Documents/dev-create-software/udacity-react-programming-course/Would-You-Rather-Project2/src/components/Dashboard.js"],"names":["React","PureComponent","Question","TabContent","TabPane","Nav","NavItem","NavLink","Row","Col","classnames","connect","PropTypes","DashBoard","state","activeTab","tab","setState","props","unansweredQuestions","answeredQuestions","active","toggle","map","qid","propTypes","answeredPolls","array","unansweredPolls","mapStateToProps","questions","users","authedUser","user","Object","keys","answers","sort","a","b","timestamp","filter","includes"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport Question from './Question';\nimport { TabContent, TabPane, Nav, NavItem, NavLink, Row, Col } from 'reactstrap';\nimport classnames from 'classnames';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nclass DashBoard extends PureComponent {\n  state = {\n    activeTab: '1'\n  };\n\n  toggle(tab) {\n    if (this.state.activeTab !== tab) {\n      this.setState({\n        activeTab: tab\n      });\n    }\n  }\n\n  render() {\n    const { unansweredQuestions, answeredQuestions } = this.props;\n    return (\n      <div>\n        <Nav tabs>\n          <NavItem>\n            <NavLink\n              className={classnames({ active: this.state.activeTab === '1' })}\n              onClick={() => { this.toggle('1'); }}\n            >\n              Unanswered\n            </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink\n              className={classnames({ active: this.state.activeTab === '2' })}\n              onClick={() => { this.toggle('2'); }}\n            >\n              Answered\n            </NavLink>\n          </NavItem>\n        </Nav>\n\n        <TabContent activeTab={this.state.activeTab}>\n          <TabPane tabId=\"1\">\n            <Row>\n              {unansweredQuestions.map(qid =>\n                <Col key={qid} sm=\"6\" md=\"4\">\n                  <Question id={qid}/>\n                </Col>\n              )}\n            </Row>\n          </TabPane>\n          <TabPane tabId=\"2\">\n            <Row>\n              {answeredQuestions.map(qid =>\n                <Col key={qid} sm=\"6\" md=\"4\">\n                  <Question id={qid}/>\n                </Col>\n              )}\n            </Row>\n          </TabPane>\n        </TabContent>\n      </div>\n    );\n  }\n}\n\nDashBoard.propTypes = {\n  answeredPolls : PropTypes.array,\n  unansweredPolls : PropTypes.array\n};\n\nfunction mapStateToProps ({ questions, users, authedUser }) {\n  const user = users[authedUser];\n  const answeredQuestions = Object.keys(user.answers)\n    .sort((a,b) => questions[b].timestamp - questions[a].timestamp);\n  return {\n    unansweredQuestions : Object.keys(questions).filter(qid => !answeredQuestions.includes(qid))\n      .sort((a,b) => questions[b].timestamp - questions[a].timestamp),\n    answeredQuestions\n  }\n}\n\nexport default connect(mapStateToProps)(DashBoard)\n"]},"metadata":{},"sourceType":"module"}